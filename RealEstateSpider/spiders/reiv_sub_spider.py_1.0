import re

from scrapy.spider import BaseSpider
from scrapy.selector import HtmlXPathSelector

from REIV.items import REIVAuctionItem

class ReivSubSpider(BaseSpider):
    name = "REIVSub_Sp"
    allowed_domains = [
        "http://www.realestateview.com.au/portal/",
        "http://www.realestateview.com.au/"
    ]
    start_urls = [
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=balwyn&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=blackburn%20north&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=blackburn%20south&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=blackburn&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=boxhill%20south&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=boxhill&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=burwood%20east&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=burwood&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=camberwell&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=cantebury&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=doncaster%20east&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=forest%20hill&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=glen%20waverley&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=heathmont&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=mitcham&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=ringwood&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=surrey%20hills&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=toorak&postcode=',
        'http://www.realestateview.com.au/portal/propertydata?rm=salesauctionresults&state=victoria&suburb=vermont&postcode='
    ]


# Suburb page table shell extraction string:
# hxs.select('//div[contains(@class, "pd-table-inner")]/table/tr').extract()

    def parse(self, response):

        hxs = HtmlXPathSelector(response)
        auction_ress = hxs.select('//div[contains(@class, "pd-table-inner")]/table/tr')
        items = []

        for auction_res in auction_ress:

            # Check if the td eleement text exists in a particular tr
            if len(auction_res.select('td/text()')) > 0:

              item = REIVAuctionItem()

              item['src_domains'] = self.allowed_domains
              item['src_url'] = response.url

              # RegEx to replace HexA0 and contigious whitespaces as a space
              item['prop_address'] = auction_res.select('td[1]/text()').extract()[0].lstrip().rstrip()
              re_address_del = re.compile('(\\xa0)|\s\s+')
              item['prop_address'] = re_address_del.sub(' ', item['prop_address'])

              # RegEx to find suburb and replace %20 string as a space
              re_getsuburb = re.compile('suburb=([a-zA-Z%20]+)')
              re_space_rel = re.compile('%20')
              item['prop_suburb'] = re_getsuburb.search(item['src_url']).group(1)
              item['prop_suburb'] = re_space_rel.sub(' ', item['prop_suburb'])

              item['prop_bedr'] = auction_res.select('td[2]/text()').extract()[0].lstrip().rstrip()

              item['prop_price'] = auction_res.select('td[3]/text()').extract()[0].lstrip().rstrip()
              re_price_del = re.compile('[$,a-zA-Z]')
              item['prop_price'] = re_price_del.sub('', item['prop_price'])

              item['prop_type'] = auction_res.select('td[4]/text()').extract()[0].lstrip().rstrip()
              item['auc_method'] = auction_res.select('td[5]/text()').extract()[0].lstrip().rstrip()
              item['auc_saledate'] = auction_res.select('td[6]/text()').extract()[0].lstrip().rstrip()
              item['auc_agent'] = auction_res.select('td[7]/text()').extract()[0].lstrip().rstrip()

              items.append(item)

        return items
